{"version":3,"sources":["Configuration/DisplayConfiguration.ts","resources/SVG/FrontendSVG.svg","resources/SVG/BackendSVG.svg","resources/SVG/DatabaseSVG.svg","resources/SVG/OtherSkillsSVG.svg","resources/SVG/BootstrapLogoSVG.svg","resources/SVG/ReactLogoSVG.svg","resources/SVG/CSS3LogoSVG.svg","resources/SVG/HTML5LogoSVG.svg","resources/SVG/JavascriptLogoSVG.svg","resources/SVG/ReduxLogoSVG.svg","resources/SVG/SassLogoSVG.svg","components/Pages/Homepage/Skills/SkillsContext.ts","resources/SVG/TypescriptSVG.svg","resources/SVG/NodeJsLogoSVG.svg","resources/SVG/ExpressJsLogoSVG.svg","resources/SVG/CSharpLogo.svg","resources/SVG/NETCoreLogo.svg","resources/SVG/MongoDBLogoSVG.svg","resources/SVG/MySqlLogoSVG.svg","resources/SVG/PostgresSqlLogoSVG.svg","resources/SVG/GitLogoSVG.svg","resources/SVG/FigmaLogoSVG.svg","Animations/SkillAnimations.ts","Animations/ProjectAnimations.ts","components/SVG/TimesSVG.tsx","components/Pages/Homepage/Skills/SkillCategory.tsx","components/Pages/Homepage/Skills/Skills.tsx","components/Pages/Homepage/Projects/ProjectContext.ts","resources/Images/Issue Tracker Website Picture.png","resources/Images/Sorting Algorithm Visualizer Picture.png","resources/Images/Clothing Website Picture.png","components/SVG/StarSVG.tsx","components/Pages/Homepage/Projects/Projects.tsx","components/Pages/Homepage/About/About.tsx","components/Navigation/Navbar.tsx","components/Pages/Homepage/Header/Header.tsx","components/Pages/Homepage/Contact/Contact.tsx","components/SVG/LinkedInLogoSVG.tsx","components/SVG/GithubLogoSVG.tsx","components/Pages/Homepage/Footer/Footer.tsx","components/Pages/Homepage/Homepage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DISPLAY_TYPES","skillsContext","name","btnText","img","FrontendSVG","skillImages","ReactLogoSVG","status","ReduxLogoSVG","HTML5LogoSVG","JavascriptLogoSVG","CSS3LogoSVG","SassLogoSVG","BootstrapLogoSVG","BackendSVG","DatabaseSVG","OtherSkillsSVG","SkillAnimations","skillCategoryRef","CSSLeft","CSSRight","btnRef","nameRef","imgRef","skillsContainerRef","closeBtnRef","skillsHeadingRef","newTimeline","gsap","timeline","skillCategories","document","querySelectorAll","forEach","element","getAttribute","t1","set","pointerEvents","to","duration","opacity","play","current","clipPath","ease","top","y","left","xPercent","width","height","right","zIndex","marginLeft","padding","onComplete","skills","length","stagger","marginRight","rotate","transformOrigin","categoryCurrentlyBeingViewed","setViewingSkillCategory","setCategoryCurrentlyBeingViewed","CSSTop","CSSTransformXPerc","TimesSVG","props","xmlns","className","classes","aria-hidden","focusable","preserveAspectRatio","viewBox","d","fill","SkillCategory","categoryIndex","viewingSkillCategory","currentDisplayType","setCurrentDisplayType","useRef","useState","setCSSTop","setCSSLeft","setCSSRight","setCSSTransformXPerc","initialPositionValuesSet","setInitialPositionValuesSet","useEffect","setPositioningValues","window","innerWidth","Math","ceil","toString","prevState","DESKTOP","MOBILE","addEventListener","setAndPositionElement","animateFromMobileToNormal","animateFromNormalToMobile","id","ref","src","alt","style","disabled","onClick","showNormalSkillAnimation","showMobileSkillAnimation","map","skillImg","skillImgIndex","reverseAnimation","Skills","skillsRef","scrollTrigger","trigger","start","end","toggleActions","skillCat","htmlElement","getElementsByTagName","overflow","skillsElement","querySelector","scrollIntoView","skill","skillIndex","projects","description","favourite","longName","ProjectAnimations","projectsWrapperRef","projectsHeadingRef","registerPlugin","ScrollTrigger","scrub","pin","project","projectLineSpans","projectName","projectButton","projectImg","projectFavourite","from","skewY","amount","StarSVG","Projects","initialAnimations","projectIndex","line","lineIndex","About","aboutRef","tl","x","Navbar","navListItems","delay","addItemToRefs","el","includes","push","href","Header","headerFirstNameDivs","headerSecondNameText","headerTitleText","headerRight","headerCTABtn","lastName","visibility","scaleY","Contact","contactWrapperRef","contactHeadingRef","contactSubHeadingRef","submitFormBtnRef","action","method","htmlFor","type","placeholder","required","cols","rows","LinkedInLogoSVG","GithubLogoSVG","fillRule","clipRule","Footer","target","rel","Homepage","homepageRef","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a10f3cbe.chunk.js","sourcesContent":["export enum DISPLAY_TYPES {\r\n  \"MOBILE\" = \"MOBILE\",\r\n  \"DESKTOP\" = \"DESKTOP\",\r\n}\r\n","export default __webpack_public_path__ + \"static/media/FrontendSVG.ec0712ab.svg\";","export default __webpack_public_path__ + \"static/media/BackendSVG.c389b8fc.svg\";","export default __webpack_public_path__ + \"static/media/DatabaseSVG.6c64e70d.svg\";","export default __webpack_public_path__ + \"static/media/OtherSkillsSVG.07960f0a.svg\";","export default __webpack_public_path__ + \"static/media/BootstrapLogoSVG.a53366e4.svg\";","export default __webpack_public_path__ + \"static/media/ReactLogoSVG.572ba693.svg\";","export default __webpack_public_path__ + \"static/media/CSS3LogoSVG.f892ae81.svg\";","export default __webpack_public_path__ + \"static/media/HTML5LogoSVG.01809336.svg\";","export default __webpack_public_path__ + \"static/media/JavascriptLogoSVG.7d48915a.svg\";","export default __webpack_public_path__ + \"static/media/ReduxLogoSVG.88b30fbf.svg\";","export default __webpack_public_path__ + \"static/media/SassLogoSVG.a67a8963.svg\";","// SVG\r\nimport FrontendSVG from \"../../../../resources/SVG/FrontendSVG.svg\";\r\nimport BackendSVG from \"../../../../resources/SVG/BackendSVG.svg\";\r\nimport DatabaseSVG from \"../../../../resources/SVG/DatabaseSVG.svg\";\r\nimport OtherSkillsSVG from \"../../../../resources/SVG/OtherSkillsSVG.svg\";\r\n\r\nimport BootstrapLogoSVG from \"../../../../resources/SVG/BootstrapLogoSVG.svg\";\r\nimport ReactLogoSVG from \"../../../../resources/SVG/ReactLogoSVG.svg\";\r\nimport CSS3LogoSVG from \"../../../../resources/SVG/CSS3LogoSVG.svg\";\r\nimport HTML5LogoSVG from \"../../../../resources/SVG/HTML5LogoSVG.svg\";\r\nimport JavascriptLogoSVG from \"../../../../resources/SVG/JavascriptLogoSVG.svg\";\r\nimport ReduxLogoSVG from \"../../../../resources/SVG/ReduxLogoSVG.svg\";\r\nimport SassLogoSVG from \"../../../../resources/SVG/SassLogoSVG.svg\";\r\nimport TypescriptSVG from \"../../../../resources/SVG/TypescriptSVG.svg\";\r\n\r\nimport NodeJsLogoSVG from \"../../../../resources/SVG/NodeJsLogoSVG.svg\";\r\nimport ExpressJsLogoSVG from \"../../../../resources/SVG/ExpressJsLogoSVG.svg\";\r\nimport CSharpLogo from \"../../../../resources/SVG/CSharpLogo.svg\";\r\nimport NETCoreLogo from \"../../../../resources/SVG/NETCoreLogo.svg\";\r\n\r\nimport MongoDBLogoSVG from \"../../../../resources/SVG/MongoDBLogoSVG.svg\";\r\nimport MySqlLogoSVG from \"../../../../resources/SVG/MySqlLogoSVG.svg\";\r\nimport PostgresSqlLogoSVG from \"../../../../resources/SVG/PostgresSqlLogoSVG.svg\";\r\n\r\nimport GitLogoSVG from \"../../../../resources/SVG/GitLogoSVG.svg\";\r\nimport FigmaLogoSVG from \"../../../../resources/SVG/FigmaLogoSVG.svg\";\r\n\r\ninterface SkillObject {\r\n  img: string;\r\n  status: string;\r\n}\r\n\r\ninterface SkillCategory {\r\n  name: string;\r\n  btnText: string;\r\n  img: string;\r\n  skillImages: SkillObject[];\r\n}\r\n\r\nexport let skillsContext: SkillCategory[] = [\r\n  {\r\n    name: \"Frontend\",\r\n    btnText: \"Inspect\",\r\n    img: FrontendSVG,\r\n    skillImages: [\r\n      { img: ReactLogoSVG, status: \"\" },\r\n      { img: ReduxLogoSVG, status: \"\" },\r\n      { img: HTML5LogoSVG, status: \"\" },\r\n      { img: JavascriptLogoSVG, status: \"\" },\r\n      { img: TypescriptSVG, status: \"\" },\r\n      { img: CSS3LogoSVG, status: \"\" },\r\n      { img: SassLogoSVG, status: \"\" },\r\n      { img: BootstrapLogoSVG, status: \"\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Backend\",\r\n    btnText: \"Deploy\",\r\n    img: BackendSVG,\r\n    skillImages: [\r\n      { img: NodeJsLogoSVG, status: \"\" },\r\n      { img: ExpressJsLogoSVG, status: \"\" },\r\n      { img: CSharpLogo, status: \"Learning\" },\r\n      { img: NETCoreLogo, status: \"Learning\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Database\",\r\n    btnText: \"Select\",\r\n    img: DatabaseSVG,\r\n    skillImages: [\r\n      { img: MongoDBLogoSVG, status: \"\" },\r\n      { img: MySqlLogoSVG, status: \"\" },\r\n      { img: PostgresSqlLogoSVG, status: \"\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Other\",\r\n    btnText: \"Explore\",\r\n    img: OtherSkillsSVG,\r\n    skillImages: [\r\n      { img: GitLogoSVG, status: \"\" },\r\n      { img: FigmaLogoSVG, status: \"\" },\r\n    ],\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/TypescriptSVG.12f0e40b.svg\";","export default __webpack_public_path__ + \"static/media/NodeJsLogoSVG.12381cf3.svg\";","export default __webpack_public_path__ + \"static/media/ExpressJsLogoSVG.b361318f.svg\";","export default __webpack_public_path__ + \"static/media/CSharpLogo.e65ada01.svg\";","export default __webpack_public_path__ + \"static/media/NETCoreLogo.e2aac1c9.svg\";","export default __webpack_public_path__ + \"static/media/MongoDBLogoSVG.54e05563.svg\";","export default __webpack_public_path__ + \"static/media/MySqlLogoSVG.377fb0d7.svg\";","export default __webpack_public_path__ + \"static/media/PostgresSqlLogoSVG.2f1758d8.svg\";","export default __webpack_public_path__ + \"static/media/GitLogoSVG.b6ab4d13.svg\";","export default __webpack_public_path__ + \"static/media/FigmaLogoSVG.c5b8fbd5.svg\";","import { RefObject, Dispatch, SetStateAction } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\n\r\nnamespace SkillAnimations {\r\n  export const showNormalSkillAnimation = (\r\n    name: string,\r\n    skillCategoryRef: any,\r\n    CSSLeft: string,\r\n    CSSRight: string,\r\n    btnRef: RefObject<HTMLButtonElement>,\r\n    nameRef: RefObject<HTMLDivElement>,\r\n    imgRef: RefObject<HTMLDivElement>,\r\n    skillsContainerRef: RefObject<HTMLDivElement>,\r\n    closeBtnRef: RefObject<HTMLDivElement>,\r\n    skillsHeadingRef: RefObject<HTMLDivElement>\r\n  ): void => {\r\n    let newTimeline = gsap.timeline();\r\n    let skillCategories = document.querySelectorAll(\".skills__category\");\r\n\r\n    if (skillCategories) {\r\n      skillCategories.forEach((element) => {\r\n        if (element.getAttribute(\"id\") !== name) {\r\n          let t1 = gsap.timeline();\r\n          t1.set(element, {\r\n            pointerEvents: \"none\",\r\n          }).to(element, {\r\n            duration: 0.3,\r\n            opacity: 0,\r\n          });\r\n          t1.play(0);\r\n        } else {\r\n          skillCategoryRef.current = element;\r\n\r\n          if (skillCategoryRef.current) {\r\n            newTimeline\r\n              .set(btnRef.current, {\r\n                pointerEvents: \"none\",\r\n              })\r\n              .to(btnRef.current, {\r\n                clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\",\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n              })\r\n              .to(skillsHeadingRef.current, {\r\n                opacity: 0,\r\n                pointerEvents: \"none\",\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n              })\r\n              .to(\r\n                nameRef.current,\r\n                {\r\n                  clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\",\r\n                  duration: 0.2,\r\n                  ease: \"none\",\r\n                },\r\n                \"-=0.2\"\r\n              )\r\n              .to(nameRef.current, {\r\n                top: \"50%\",\r\n                y: \"-200\",\r\n                left: \"calc(30vw + 10%)\",\r\n                xPercent: \"initial\",\r\n              })\r\n              .to(\r\n                element,\r\n                {\r\n                  width: \"100%\",\r\n                  height: \"100vh\",\r\n                  top: 0,\r\n                  left: CSSLeft === \"initial\" ? \"initial\" : \"0%\",\r\n                  right: CSSRight === \"initial\" ? \"initial\" : \"0%\",\r\n                  xPercent: \"initial\",\r\n                  zIndex: 100,\r\n                  duration: 0.7,\r\n                  ease: \"power1.out\",\r\n                },\r\n                \"-=0.3\"\r\n              )\r\n              .to(\r\n                imgRef.current,\r\n                {\r\n                  top: \"50%\",\r\n                  y: \"-50%\",\r\n                  width: \"30vw\",\r\n                  height: \"30vw\",\r\n                  left: \"0\",\r\n                  xPercent: \"initial\",\r\n                  marginLeft: \"5%\",\r\n                  duration: 0.7,\r\n                },\r\n                \"-=0.7\"\r\n              )\r\n              .to(\r\n                skillsContainerRef.current,\r\n                {\r\n                  width: \"calc(85% - 30vw)\",\r\n                  height: \"380\",\r\n                  top: \"calc(50% + 50px)\",\r\n                  y: \"-200\",\r\n                  xPercent: \"initial\",\r\n                  left: \"calc(30vw + 10%)\",\r\n                  padding: \"20\",\r\n                  duration: 0.5,\r\n                  onComplete: () => {\r\n                    let skills = document.querySelectorAll(`.${name}-skill`);\r\n\r\n                    if (skills.length > 0) {\r\n                      gsap.to(skills, {\r\n                        duration: 0.3,\r\n                        clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n                        stagger: 0.08,\r\n                        ease: \"none\",\r\n                      });\r\n                    }\r\n                  },\r\n                },\r\n                \"-=0.5\"\r\n              )\r\n              .to(\r\n                nameRef.current,\r\n                {\r\n                  opacity: 1,\r\n                  clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n                  duration: 0.3,\r\n                },\r\n                \"-=0.1\"\r\n              )\r\n              .to(\r\n                closeBtnRef.current,\r\n                {\r\n                  top: \"50%\",\r\n                  y: \"-200\",\r\n                  right: \"0%\",\r\n                  marginRight: \"5%\",\r\n                  duration: 0,\r\n                },\r\n                \"-=0.5\"\r\n              )\r\n              .to(closeBtnRef.current, {\r\n                opacity: 1,\r\n                rotate: \"540\",\r\n                pointerEvents: \"all\",\r\n                duration: 0.7,\r\n              });\r\n          }\r\n        }\r\n      });\r\n      newTimeline.play(0);\r\n    }\r\n  };\r\n\r\n  export const showMobileSkillAnimation = (\r\n    name: string,\r\n    skillCategoryRef: any,\r\n    btnRef: RefObject<HTMLButtonElement>,\r\n    nameRef: RefObject<HTMLDivElement>,\r\n    imgRef: RefObject<HTMLDivElement>,\r\n    skillsContainerRef: RefObject<HTMLDivElement>,\r\n    closeBtnRef: RefObject<HTMLDivElement>,\r\n    skillsHeadingRef: RefObject<HTMLDivElement>\r\n  ): void => {\r\n    let newTimeline = gsap.timeline();\r\n    let skillCategories = document.querySelectorAll(\".skills__category\");\r\n\r\n    if (skillCategories) {\r\n      skillCategories.forEach((element) => {\r\n        if (element.getAttribute(\"id\") !== name) {\r\n          let t1 = gsap.timeline();\r\n          t1.set(element, {\r\n            pointerEvents: \"none\",\r\n          }).to(element, {\r\n            duration: 0.3,\r\n            opacity: 0,\r\n          });\r\n          t1.play(0);\r\n        } else {\r\n          skillCategoryRef.current = element;\r\n\r\n          if (skillCategoryRef.current) {\r\n            newTimeline\r\n              .set(btnRef.current, {\r\n                pointerEvents: \"none\",\r\n              })\r\n              .to(btnRef.current, {\r\n                clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\",\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n              })\r\n              .to(skillsHeadingRef.current, {\r\n                opacity: 0,\r\n                pointerEvents: \"none\",\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n              })\r\n              .to(\r\n                nameRef.current,\r\n                {\r\n                  clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\",\r\n                  duration: 0.2,\r\n                  ease: \"none\",\r\n                },\r\n                \"-=0.2\"\r\n              )\r\n              .to(nameRef.current, {\r\n                top: \"370\",\r\n                xPercent: -50,\r\n                left: \"50%\",\r\n              })\r\n              .to(\r\n                element,\r\n                {\r\n                  width: \"100%\",\r\n                  height: \"100vh\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  right: \"initial\",\r\n                  xPercent: 0,\r\n                  zIndex: 100,\r\n                  duration: 0.7,\r\n                  transformOrigin: \"center\",\r\n                  ease: \"power1.out\",\r\n                },\r\n                \"-=0.3\"\r\n              )\r\n              .to(\r\n                imgRef.current,\r\n                {\r\n                  top: \"0%\",\r\n                  width: \"350\",\r\n                  height: \"350\",\r\n                  left: \"50%\",\r\n                  xPercent: -50,\r\n                  duration: 0.7,\r\n                },\r\n                \"-=0.7\"\r\n              )\r\n              .to(\r\n                skillsContainerRef.current,\r\n                {\r\n                  width: \"100%\",\r\n                  height: \"380\",\r\n                  top: \"410\",\r\n                  xPercent: -50,\r\n                  left: \"50%\",\r\n                  padding: \"20px 5%\",\r\n                  duration: 0.5,\r\n                  onComplete: () => {\r\n                    let skills = document.querySelectorAll(`.${name}-skill`);\r\n\r\n                    if (skills.length > 0) {\r\n                      gsap.to(skills, {\r\n                        duration: 0.3,\r\n                        clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n                        stagger: 0.08,\r\n                        ease: \"none\",\r\n                      });\r\n                    }\r\n                  },\r\n                },\r\n                \"-=0.5\"\r\n              )\r\n              .to(\r\n                nameRef.current,\r\n                {\r\n                  opacity: 1,\r\n                  clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n                  duration: 0.3,\r\n                },\r\n                \"-=0.1\"\r\n              )\r\n              .to(\r\n                closeBtnRef.current,\r\n                {\r\n                  y: \"370\",\r\n                  top: \"0%\",\r\n                  right: \"0%\",\r\n                  marginRight: \"5%\",\r\n                  duration: 0,\r\n                },\r\n                \"-=0.5\"\r\n              )\r\n              .to(closeBtnRef.current, {\r\n                opacity: 1,\r\n                rotate: \"540\",\r\n                pointerEvents: \"all\",\r\n                duration: 0.7,\r\n              });\r\n          }\r\n        }\r\n      });\r\n      newTimeline.play(0);\r\n    }\r\n  };\r\n\r\n  export const animateFromNormalToMobile = (\r\n    name: string,\r\n    categoryCurrentlyBeingViewed: string,\r\n    nameRef: RefObject<HTMLDivElement>,\r\n    imgRef: RefObject<HTMLDivElement>,\r\n    skillsContainerRef: RefObject<HTMLDivElement>,\r\n    closeBtnRef: RefObject<HTMLDivElement>\r\n  ) => {\r\n    if (name === categoryCurrentlyBeingViewed) {\r\n      const newTimeline = gsap.timeline();\r\n\r\n      newTimeline\r\n        .to(\r\n          imgRef.current,\r\n          {\r\n            top: \"0%\",\r\n            y: \"initial\",\r\n            width: \"350\",\r\n            height: \"350\",\r\n            marginLeft: \"initial\",\r\n            left: \"50%\",\r\n            xPercent: -50,\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          nameRef.current,\r\n          {\r\n            top: \"370\",\r\n            xPercent: -50,\r\n            y: \"initial\",\r\n            left: \"50%\",\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          skillsContainerRef.current,\r\n          {\r\n            width: \"100%\",\r\n            height: \"380\",\r\n            top: \"410\",\r\n            xPercent: -50,\r\n            y: \"initial\",\r\n            left: \"50%\",\r\n            padding: \"20px 5%\",\r\n            duration: 0.5,\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          closeBtnRef.current,\r\n          {\r\n            top: \"370\",\r\n            y: \"initial\",\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        );\r\n\r\n      newTimeline.play(0);\r\n    }\r\n  };\r\n\r\n  export const animateFromMobileToNormal = (\r\n    name: string,\r\n    categoryCurrentlyBeingViewed: string,\r\n    nameRef: RefObject<HTMLDivElement>,\r\n    imgRef: RefObject<HTMLDivElement>,\r\n    skillsContainerRef: RefObject<HTMLDivElement>,\r\n    closeBtnRef: RefObject<HTMLDivElement>\r\n  ) => {\r\n    if (name === categoryCurrentlyBeingViewed) {\r\n      const newTimeline = gsap.timeline();\r\n\r\n      newTimeline\r\n        .to(\r\n          imgRef.current,\r\n          {\r\n            top: \"50%\",\r\n            y: \"-50%\",\r\n            width: \"400\",\r\n            height: \"400\",\r\n            left: \"0\",\r\n            xPercent: \"initial\",\r\n            marginLeft: \"5%\",\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          nameRef.current,\r\n          {\r\n            top: \"50%\",\r\n            y: \"-200\",\r\n            left: \"calc(440px + 5%)\",\r\n            xPercent: \"initial\",\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          skillsContainerRef.current,\r\n          {\r\n            width: \"calc(90% - 400px)\",\r\n            height: \"380\",\r\n            top: \"calc(50% + 50px)\",\r\n            y: \"-200\",\r\n            xPercent: \"initial\",\r\n            left: \"calc(440px + 5%)\",\r\n            padding: \"20px 20px\",\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        )\r\n        .to(\r\n          closeBtnRef.current,\r\n          {\r\n            top: \"50%\",\r\n            y: \"-200\",\r\n            right: \"0%\",\r\n            marginRight: \"5%\",\r\n            duration: 0.7,\r\n          },\r\n          \"-=0.7\"\r\n        );\r\n\r\n      newTimeline.play(0);\r\n    }\r\n  };\r\n\r\n  export const reverseAnimation = (\r\n    name: string,\r\n    skillCategoryRef: any,\r\n    btnRef: RefObject<HTMLButtonElement>,\r\n    nameRef: RefObject<HTMLDivElement>,\r\n    imgRef: RefObject<HTMLDivElement>,\r\n    skillsContainerRef: RefObject<HTMLDivElement>,\r\n    closeBtnRef: RefObject<HTMLDivElement>,\r\n    setViewingSkillCategory: Dispatch<SetStateAction<boolean>>,\r\n    setCategoryCurrentlyBeingViewed: Dispatch<SetStateAction<string>>,\r\n    CSSTop: string,\r\n    CSSLeft: string,\r\n    CSSRight: string,\r\n    CSSTransformXPerc: string,\r\n    skillsHeadingRef: RefObject<HTMLDivElement>\r\n  ) => {\r\n    const newTimeline = gsap.timeline({\r\n      onComplete: () => {\r\n        setCategoryCurrentlyBeingViewed(\"\");\r\n        setViewingSkillCategory(false);\r\n      },\r\n    });\r\n\r\n    let skills = document.querySelectorAll(`.${name}-skill`);\r\n    newTimeline\r\n      .set(closeBtnRef.current, {\r\n        pointerEvents: \"none\",\r\n      })\r\n      .set(\".skills__category\", {\r\n        pointerEvents: \"none\",\r\n      })\r\n      .to(closeBtnRef.current, {\r\n        opacity: 0,\r\n        rotate: \"0\",\r\n        duration: 0.7,\r\n      })\r\n      .to(\r\n        skills,\r\n        {\r\n          duration: 0.2,\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 0%, 0 0%)\",\r\n          stagger: -0.08,\r\n        },\r\n        \"-=0.5\"\r\n      )\r\n      .to(skillsContainerRef.current, {\r\n        width: \"0\",\r\n        height: \"0\",\r\n        top: \"initial\",\r\n        y: \"initial\",\r\n        xPercent: \"initial\",\r\n        left: \"initial\",\r\n        marginLeft: \"initial\",\r\n        padding: \"initial\",\r\n        duration: 0.5,\r\n      })\r\n      .to(\r\n        nameRef.current,\r\n        {\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 0%, 0 0%)\",\r\n          duration: 0.3,\r\n        },\r\n        \"-=0.8\"\r\n      )\r\n      .to(nameRef.current, {\r\n        top: \"200\",\r\n        y: \"initial\",\r\n        xPercent: -50,\r\n        left: \"50%\",\r\n        marginLeft: \"initial\",\r\n        duration: 0,\r\n      })\r\n      .to(\r\n        skillCategoryRef.current,\r\n        {\r\n          width: 200,\r\n          height: 300,\r\n          left: CSSLeft,\r\n          right: CSSRight,\r\n          top: CSSTop,\r\n          xPercent: CSSTransformXPerc,\r\n          zIndex: \"initial\",\r\n          duration: 0.7,\r\n        },\r\n        \"-=0.5\"\r\n      )\r\n      .to(\r\n        imgRef.current,\r\n        {\r\n          top: \"0px\",\r\n          y: \"0px\",\r\n          width: \"200\",\r\n          height: \"200\",\r\n          xPercent: -50,\r\n          left: \"50%\",\r\n          marginLeft: \"0%\",\r\n          duration: 0.7,\r\n        },\r\n        \"-=0.7\"\r\n      )\r\n      .to(\r\n        nameRef.current,\r\n        {\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n          duration: 0.3,\r\n        },\r\n        \"-=0.2\"\r\n      )\r\n      .to(\r\n        btnRef.current,\r\n        {\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n          duration: 0.3,\r\n        },\r\n        \"-=0.2\"\r\n      )\r\n      .to(\".skills__category\", {\r\n        duration: 0.3,\r\n        opacity: 1,\r\n        stagger: 0.1,\r\n      })\r\n      .to(skillsHeadingRef.current, {\r\n        opacity: 1,\r\n        duration: 0.2,\r\n        pointerEvents: \"all\",\r\n      })\r\n      .set(btnRef.current, {\r\n        pointerEvents: \"all\",\r\n      })\r\n      .set(\".skills__category\", {\r\n        pointerEvents: \"all\",\r\n      });\r\n\r\n    newTimeline.play(0);\r\n  };\r\n}\r\n\r\nexport default SkillAnimations;\r\n","import { RefObject } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nexport namespace ProjectAnimations {\r\n  export const initialAnimations = (\r\n    projectsWrapperRef: RefObject<HTMLElement>,\r\n    projectsHeadingRef: RefObject<HTMLDivElement>\r\n  ) => {\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    if (projectsHeadingRef.current && projectsWrapperRef.current) {\r\n      gsap.to(projectsHeadingRef.current, {\r\n        xPercent: \"-=80\",\r\n        scrollTrigger: {\r\n          trigger: projectsWrapperRef.current,\r\n          start: \"-20% top\",\r\n          end: \"bottom bottom\",\r\n          toggleActions: \"play reverse play reverse\",\r\n          scrub: 1,\r\n          pin: projectsHeadingRef.current,\r\n        },\r\n      });\r\n    }\r\n\r\n    let projects = document.querySelectorAll(\".project\");\r\n\r\n    if (projects.length > 0) {\r\n      projects.forEach((project) => {\r\n        let projectLineSpans = project.querySelectorAll(\r\n          \".project__content-description-line span\"\r\n        );\r\n        let projectName = project.querySelector(\".project__content-name h5\");\r\n        let projectButton = project.querySelector(\r\n          \".project__content-view-project button\"\r\n        );\r\n        let projectImg = project.querySelector(\".project__img\");\r\n        let projectFavourite = project.querySelector(\".project__favourite\");\r\n\r\n        if (projectFavourite) {\r\n          gsap.to(projectFavourite, {\r\n            duration: 1.8,\r\n            opacity: 1,\r\n            scrollTrigger: {\r\n              trigger: project,\r\n              start: \"center bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          });\r\n        }\r\n\r\n        if (projectImg) {\r\n          gsap.to(projectImg, {\r\n            duration: 0.8,\r\n            clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0% 100%)\",\r\n            scrollTrigger: {\r\n              trigger: project,\r\n              start: \"center bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          });\r\n        }\r\n\r\n        if (projectButton) {\r\n          gsap.from(projectButton, {\r\n            duration: 1.8,\r\n            y: 200,\r\n            ease: \"power4.out\",\r\n            skewY: 20,\r\n            stagger: {\r\n              amount: 0.4,\r\n            },\r\n            scrollTrigger: {\r\n              trigger: project,\r\n              start: \"center bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          });\r\n        }\r\n\r\n        if (projectName) {\r\n          gsap.from(projectName, {\r\n            duration: 1.8,\r\n            y: 200,\r\n            ease: \"power4.out\",\r\n            skewY: 20,\r\n            stagger: {\r\n              amount: 0.4,\r\n            },\r\n            scrollTrigger: {\r\n              trigger: project,\r\n              start: \"center bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          });\r\n        }\r\n\r\n        if (projectLineSpans.length > 0) {\r\n          gsap.from(projectLineSpans, {\r\n            duration: 1.8,\r\n            y: 200,\r\n            ease: \"power4.out\",\r\n            skewY: 20,\r\n            stagger: {\r\n              amount: 0.4,\r\n            },\r\n            scrollTrigger: {\r\n              trigger: project,\r\n              start: \"center bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { FC } from \"react\";\r\n\r\ninterface SVGProps {\r\n  classes?: string;\r\n}\r\n\r\nconst TimesSVG: FC<SVGProps> = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={props.classes}\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      viewBox=\"0 0 36 36\"\r\n    >\r\n      <path\r\n        d=\"M19.41 18l8.29-8.29a1 1 0 0 0-1.41-1.41L18 16.59l-8.29-8.3a1 1 0 0 0-1.42 1.42l8.3 8.29l-8.3 8.29A1 1 0 1 0 9.7 27.7l8.3-8.29l8.29 8.29a1 1 0 0 0 1.41-1.41z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default TimesSVG;\r\n","import {\r\n  useRef,\r\n  FC,\r\n  RefObject,\r\n  useState,\r\n  useEffect,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\n\r\n// Display Types\r\nimport { DISPLAY_TYPES } from \"../../../../Configuration/DisplayConfiguration\";\r\n\r\n// GSAP\r\nimport gsap from \"gsap\";\r\nimport SkillAnimations from \"../../../../Animations/SkillAnimations\";\r\n\r\n// SVG\r\nimport TimesSVG from \"../../../SVG/TimesSVG\";\r\n\r\ninterface skillProps {\r\n  name: string;\r\n  img: string;\r\n  skillImages: { img: string; status: string }[];\r\n  top?: number;\r\n  btnText: string;\r\n  categoryIndex: number;\r\n  viewingSkillCategory: boolean;\r\n  setViewingSkillCategory: Dispatch<SetStateAction<boolean>>;\r\n  currentDisplayType: DISPLAY_TYPES;\r\n  setCurrentDisplayType: Dispatch<SetStateAction<DISPLAY_TYPES>>;\r\n  categoryCurrentlyBeingViewed: string;\r\n  setCategoryCurrentlyBeingViewed: Dispatch<SetStateAction<string>>;\r\n  skillsHeadingRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst SkillCategory: FC<skillProps> = ({\r\n  name,\r\n  img,\r\n  top = 0,\r\n  btnText,\r\n  skillImages,\r\n  categoryIndex,\r\n  viewingSkillCategory,\r\n  setViewingSkillCategory,\r\n  currentDisplayType,\r\n  setCurrentDisplayType,\r\n  categoryCurrentlyBeingViewed,\r\n  setCategoryCurrentlyBeingViewed,\r\n  skillsHeadingRef,\r\n}) => {\r\n  const imgRef = useRef<HTMLDivElement>(null);\r\n  const nameRef = useRef<HTMLDivElement>(null);\r\n  const btnRef = useRef<HTMLButtonElement>(null);\r\n  const skillsContainerRef = useRef<HTMLDivElement>(null);\r\n  const closeBtnRef = useRef<HTMLDivElement>(null);\r\n  // let skillsContainer = useRef<HTMLDivElement[]>([]);\r\n  // skillsContainer.current = [];\r\n  let skillCategoryRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const [CSSTop, setCSSTop] = useState<string>(\"\");\r\n  const [CSSLeft, setCSSLeft] = useState<string>(\"\");\r\n  const [CSSRight, setCSSRight] = useState<string>(\"\");\r\n  const [CSSTransformXPerc, setCSSTransformXPerc] = useState<string>(\"\");\r\n  const [initialPositionValuesSet, setInitialPositionValuesSet] =\r\n    useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let skillCategories = document.querySelectorAll(\".skills__category\");\r\n    if (skillCategories) {\r\n      skillCategories.forEach((element: any) => {\r\n        if (element?.getAttribute(\"id\") === name)\r\n          skillCategoryRef.current = element;\r\n      });\r\n    }\r\n\r\n    const setPositioningValues = () => {\r\n      if (window.innerWidth > 992) {\r\n        setCSSTop(\r\n          (\r\n            Math.ceil((categoryIndex - 1) / 2) * top +\r\n            Math.ceil((categoryIndex + 1) / 2) * 160\r\n          ).toString()\r\n        );\r\n\r\n        setCSSLeft((categoryIndex + 1) % 2 !== 0 ? \"25%\" : \"initial\");\r\n        setCSSRight((categoryIndex + 1) % 2 === 0 ? \"25%\" : \"initial\");\r\n        setCSSTransformXPerc((prevState) => (prevState = \"0\"));\r\n        setCurrentDisplayType(DISPLAY_TYPES.DESKTOP);\r\n      } else if (window.innerWidth <= 992) {\r\n        // let topExtra = categoryIndex !== 0 ? categoryIndex * 80 : 50;\r\n        setCSSTop((categoryIndex * top + 120 * categoryIndex + 120).toString());\r\n        setCSSLeft(\"50%\");\r\n        setCSSRight(\"initial\");\r\n        setCSSTransformXPerc(\"-50\");\r\n        setCurrentDisplayType(DISPLAY_TYPES.MOBILE);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      setPositioningValues();\r\n    });\r\n\r\n    setPositioningValues();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !initialPositionValuesSet &&\r\n      CSSTop !== \"\" &&\r\n      CSSLeft !== \"\" &&\r\n      CSSRight !== \"\" &&\r\n      CSSTransformXPerc !== \"\"\r\n    ) {\r\n      setAndPositionElement();\r\n      setInitialPositionValuesSet(true);\r\n    }\r\n  }, [CSSTop, CSSLeft, CSSRight, CSSTransformXPerc]);\r\n\r\n  useEffect(() => {\r\n    if (viewingSkillCategory) {\r\n      if (\r\n        currentDisplayType === DISPLAY_TYPES.DESKTOP &&\r\n        skillCategoryRef.current\r\n      )\r\n        return SkillAnimations.animateFromMobileToNormal(\r\n          name,\r\n          categoryCurrentlyBeingViewed,\r\n          nameRef,\r\n          imgRef,\r\n          skillsContainerRef,\r\n          closeBtnRef\r\n        );\r\n      if (\r\n        currentDisplayType === DISPLAY_TYPES.MOBILE &&\r\n        skillCategoryRef.current\r\n      )\r\n        return SkillAnimations.animateFromNormalToMobile(\r\n          name,\r\n          categoryCurrentlyBeingViewed,\r\n          nameRef,\r\n          imgRef,\r\n          skillsContainerRef,\r\n          closeBtnRef\r\n        );\r\n    }\r\n  }, [currentDisplayType]);\r\n\r\n  useEffect(() => {\r\n    setAndPositionElement();\r\n  }, [CSSTop, CSSLeft, CSSRight, CSSTransformXPerc, viewingSkillCategory]);\r\n\r\n  const setAndPositionElement = () => {\r\n    if (skillCategoryRef.current && name !== categoryCurrentlyBeingViewed) {\r\n      gsap.to(skillCategoryRef.current, {\r\n        top: CSSTop && CSSTop,\r\n        left: CSSLeft && CSSLeft,\r\n        right: CSSRight && CSSRight,\r\n        xPercent: CSSTransformXPerc && CSSTransformXPerc,\r\n      });\r\n    }\r\n  };\r\n\r\n  const showSkills = () => {\r\n    if (skillCategoryRef.current) {\r\n      setViewingSkillCategory(true);\r\n\r\n      if (window.innerWidth > 992) {\r\n        SkillAnimations.showNormalSkillAnimation(\r\n          name,\r\n          skillCategoryRef,\r\n          CSSLeft,\r\n          CSSRight,\r\n          btnRef,\r\n          nameRef,\r\n          imgRef,\r\n          skillsContainerRef,\r\n          closeBtnRef,\r\n          skillsHeadingRef\r\n        );\r\n      } else if (window.innerWidth <= 992) {\r\n        SkillAnimations.showMobileSkillAnimation(\r\n          name,\r\n          skillCategoryRef,\r\n          btnRef,\r\n          nameRef,\r\n          imgRef,\r\n          skillsContainerRef,\r\n          closeBtnRef,\r\n          skillsHeadingRef\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"skills__category\" id={name}>\r\n      <div className=\"skills__category-container\">\r\n        <div className=\"skills__category-img\" ref={imgRef}>\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"skills__category-name\" ref={nameRef}>\r\n          {name}\r\n        </div>\r\n        <button\r\n          className=\"skills__category-btn\"\r\n          ref={btnRef}\r\n          style={{ pointerEvents: !viewingSkillCategory ? \"all\" : \"none\" }}\r\n          disabled={viewingSkillCategory}\r\n          onClick={() => {\r\n            showSkills();\r\n            setCategoryCurrentlyBeingViewed(name);\r\n          }}\r\n        >\r\n          {btnText}\r\n        </button>\r\n        <div className=\"skills__skills-container\" ref={skillsContainerRef}>\r\n          {skillImages.length > 0 &&\r\n            skillImages.map((skillImg, skillImgIndex) => (\r\n              <div\r\n                className={`skills__skill ${name}-skill`}\r\n                key={skillImgIndex}\r\n              >\r\n                <div className={`skills__skill-img `}>\r\n                  <img src={skillImg.img} alt=\"\" />\r\n                  <div className=\"skills__skill-status\">{skillImg.status}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"skills__category-close-btn\"\r\n        ref={closeBtnRef}\r\n        onClick={() => {\r\n          SkillAnimations.reverseAnimation(\r\n            name,\r\n            skillCategoryRef,\r\n            btnRef,\r\n            nameRef,\r\n            imgRef,\r\n            skillsContainerRef,\r\n            closeBtnRef,\r\n            setViewingSkillCategory,\r\n            setCategoryCurrentlyBeingViewed,\r\n            CSSTop,\r\n            CSSLeft,\r\n            CSSRight,\r\n            CSSTransformXPerc,\r\n            skillsHeadingRef\r\n          );\r\n        }}\r\n      >\r\n        <TimesSVG />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillCategory;\r\n","import { FC, useRef, RefObject, useState, useEffect } from \"react\";\r\nimport { skillsContext } from \"./SkillsContext\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\n\r\n// Display Types\r\nimport { DISPLAY_TYPES } from \"../../../../Configuration/DisplayConfiguration\";\r\n\r\n// Components\r\nimport SkillCategory from \"./SkillCategory\";\r\n\r\ninterface SkillsProps {\r\n  homepageRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst Skills: FC<SkillsProps> = () => {\r\n  const skillsRef = useRef<any>(null);\r\n  const skillsHeadingRef = useRef<HTMLDivElement>(null);\r\n  // const skillCategoriesRef: any = useRef([]);\r\n  // skillCategoriesRef.current = [];\r\n\r\n  const [viewingSkillCategory, setViewingSkillCategory] =\r\n    useState<boolean>(false);\r\n  const [currentDisplayType, setCurrentDisplayType] = useState<DISPLAY_TYPES>(\r\n    () => {\r\n      return window.innerWidth > 992\r\n        ? DISPLAY_TYPES.DESKTOP\r\n        : DISPLAY_TYPES.MOBILE;\r\n    }\r\n  );\r\n  const [categoryCurrentlyBeingViewed, setCategoryCurrentlyBeingViewed] =\r\n    useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (\".skills__category\") {\r\n      gsap.to(\".skills__category\", {\r\n        opacity: 1,\r\n      });\r\n    }\r\n\r\n    if (skillsHeadingRef && skillsRef) {\r\n      gsap.to(skillsHeadingRef.current, {\r\n        clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n        duration: 1,\r\n        scrollTrigger: {\r\n          trigger: skillsRef.current,\r\n          start: \"top center\",\r\n          end: \"bottom top\",\r\n          toggleActions: \"play reverse play reverse\",\r\n        },\r\n      });\r\n    }\r\n\r\n    let skillCategories = document.querySelectorAll(\".skills__category\");\r\n    if (skillCategories && skillsRef.current) {\r\n      skillCategories.forEach((skillCat: any) => {\r\n        gsap.to(skillCat, {\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0% 100%)\",\r\n          duration: 1,\r\n          stagger: 0.1,\r\n          scrollTrigger: {\r\n            trigger: skillsRef.current,\r\n            start: \"top center\",\r\n            end: \"bottom top\",\r\n            toggleActions: \"play reverse play reverse\",\r\n          },\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let htmlElement: HTMLHtmlElement | null =\r\n      document.getElementsByTagName(\"html\")[0];\r\n    if (viewingSkillCategory) {\r\n      if (htmlElement) htmlElement.style.overflow = \"hidden\";\r\n      let skillsElement = document.querySelector(\"#skills\");\r\n      skillsElement?.scrollIntoView();\r\n    } else {\r\n      if (htmlElement) htmlElement.style.overflow = \"initial\";\r\n    }\r\n  }, [viewingSkillCategory]);\r\n\r\n  // const addSkillToRefs = (el: HTMLDivElement): void => {\r\n  //   if (el && !skillCategoriesRef.current.includes(el)) {\r\n  //     skillCategoriesRef.current.push(el);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <section className=\"skills__grid\" id=\"skills\" ref={skillsRef}>\r\n      <div className=\"skills__heading\" ref={skillsHeadingRef}>\r\n        <span>SKILLS</span>\r\n      </div>\r\n      {skillsContext.length > 0 &&\r\n        skillsContext.map((skill, skillIndex) => (\r\n          <SkillCategory\r\n            name={skill.name}\r\n            btnText={skill.btnText}\r\n            img={skill.img}\r\n            skillImages={skill.skillImages}\r\n            categoryIndex={skillIndex}\r\n            key={skillIndex}\r\n            viewingSkillCategory={viewingSkillCategory}\r\n            setViewingSkillCategory={setViewingSkillCategory}\r\n            currentDisplayType={currentDisplayType}\r\n            setCurrentDisplayType={setCurrentDisplayType}\r\n            categoryCurrentlyBeingViewed={categoryCurrentlyBeingViewed}\r\n            setCategoryCurrentlyBeingViewed={setCategoryCurrentlyBeingViewed}\r\n            skillsHeadingRef={skillsHeadingRef}\r\n            top={300}\r\n          />\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import IssueTrackerImg from \"../../../../resources/Images/Issue Tracker Website Picture.png\";\r\nimport SortingAlgoVisuzaliserImg from \"../../../../resources/Images/Sorting Algorithm Visualizer Picture.png\";\r\nimport ClothingWebsiteImg from \"../../../../resources/Images/Clothing Website Picture.png\";\r\n\r\nexport interface Project {\r\n  img: string;\r\n  name: string;\r\n  description: string[];\r\n  btnText: string;\r\n  favourite: boolean;\r\n  longName: boolean;\r\n}\r\n\r\nexport const projects: Project[] = [\r\n  {\r\n    img: IssueTrackerImg,\r\n    name: \"Issue Tracker\",\r\n    description: [\r\n      \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Corporis\",\r\n      \"facere suscipit, enim cumque illo nesciunt temporibus nulla modi,\",\r\n      \"neque, asperiores fugiat, nobis quibusdam amet consequatur!\",\r\n    ],\r\n    btnText: \"View Project\",\r\n    favourite: true,\r\n    longName: false,\r\n  },\r\n  {\r\n    img: SortingAlgoVisuzaliserImg,\r\n    name: \"Sorting Algorithm Visualizer\",\r\n    description: [\r\n      \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Corporis\",\r\n      \"facere suscipit, enim cumque illo nesciunt temporibus nulla modi,\",\r\n      \"neque, asperiores fugiat, nobis quibusdam amet consequatur!\",\r\n    ],\r\n    btnText: \"View Project\",\r\n    favourite: false,\r\n    longName: true,\r\n  },\r\n  {\r\n    img: ClothingWebsiteImg,\r\n    name: \"Clothing Website\",\r\n    description: [\r\n      \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Corporis\",\r\n      \"facere suscipit, enim cumque illo nesciunt temporibus nulla modi,\",\r\n      \"neque, asperiores fugiat, nobis quibusdam amet consequatur!\",\r\n    ],\r\n    btnText: \"View Project\",\r\n    favourite: false,\r\n    longName: false,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/Issue Tracker Website Picture.85967a5b.png\";","export default __webpack_public_path__ + \"static/media/Sorting Algorithm Visualizer Picture.d12b4671.png\";","export default __webpack_public_path__ + \"static/media/Clothing Website Picture.44feff15.png\";","import { FC } from \"react\";\r\n\r\ninterface SVGProps {\r\n  classes?: string;\r\n}\r\n\r\nconst StarSVG: FC<SVGProps> = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={props.classes}\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <g fill=\"currentColor\">\r\n        <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327l4.898.696c.441.062.612.636.282.95l-3.522 3.356l.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default StarSVG;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nimport { projects, Project } from \"./ProjectContext\";\r\n\r\n// Animations\r\nimport { ProjectAnimations } from \"../../../../Animations/ProjectAnimations\";\r\n\r\n// SVG Components\r\nimport StarSVG from \"../../../SVG/StarSVG\";\r\n\r\nconst Projects = () => {\r\n  // const projectRefs: any = useRef([]);\r\n  // projectRefs.current = [];\r\n  const projectsHeadingRef = useRef<HTMLDivElement>(null);\r\n  const projectsWrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    ProjectAnimations.initialAnimations(projectsWrapperRef, projectsHeadingRef);\r\n  }, []);\r\n\r\n  // const addProjectToRefs = (el: HTMLDivElement): void => {\r\n  //   if (el && !projectRefs.current.includes(el)) {\r\n  //     projectRefs.current.push(el);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <section\r\n      className=\"projects__wrapper\"\r\n      ref={projectsWrapperRef}\r\n      id=\"projects\"\r\n    >\r\n      <div className=\"projects__projects\">\r\n        <div id=\"pin-start\"></div>\r\n        {projects.length > 0 &&\r\n          projects.map((project: Project, projectIndex: number) => (\r\n            <div className=\"project\" key={projectIndex}>\r\n              {project.favourite && (\r\n                <div className=\"project__favourite\">\r\n                  <StarSVG />\r\n                </div>\r\n              )}\r\n              <div className=\"project__img\">\r\n                <img src={project.img} alt=\"\" />\r\n              </div>\r\n              <div className=\"project__content\">\r\n                <div\r\n                  className={`project__content-name ${\r\n                    project.longName && \"project__content-name--long-name\"\r\n                  }`}\r\n                >\r\n                  <h5>{project.name}</h5>\r\n                </div>\r\n                <div className=\"project__content-description\">\r\n                  {project.description.length > 0 &&\r\n                    project.description.map(\r\n                      (line: string, lineIndex: number) => (\r\n                        <div className=\"project__content-description-line\">\r\n                          <span key={lineIndex}>{line}</span>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                </div>\r\n                <div className=\"project__content-view-project\">\r\n                  <button>{project.btnText}</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"projects__heading\" ref={projectsHeadingRef}>\r\n        PROJECTS\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nconst About = () => {\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n  const aboutRef = useRef<HTMLElement>(null);\r\n  // const aboutHeadingRefs: any = useRef([]);\r\n  // aboutHeadingRefs.current = [];\r\n  // const paragraphLineRefs: any = useRef([]);\r\n  // paragraphLineRefs.current = [];\r\n\r\n  useEffect(() => {\r\n    if (aboutRef.current) {\r\n      let tl = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: aboutRef.current,\r\n          start: \"-10% top\",\r\n          end: \"bottom center\",\r\n          toggleActions: \"play reverse play reverse\",\r\n        },\r\n      });\r\n      gsap.set(\".about__heading span\", {\r\n        x: \"-105%\",\r\n      });\r\n      tl.to(\".about__heading span\", {\r\n        x: 0,\r\n        opacity: 1,\r\n        duration: 0.6,\r\n        stagger: 0.1,\r\n      });\r\n\r\n      gsap.set(\".about__paragraph-line span\", {\r\n        y: 220,\r\n        skewY: 20,\r\n      });\r\n      tl.to(\r\n        \".about__paragraph-line span\",\r\n        {\r\n          y: 0,\r\n          skewY: 0,\r\n          ease: \"power4.out\",\r\n          duration: 1.8,\r\n          stagger: 0.1,\r\n        },\r\n        \"-=1.6\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // const addLineToRefs = (el: HTMLDivElement): void => {\r\n  //   if (el && !paragraphLineRefs.current.includes(el)) {\r\n  //     paragraphLineRefs.current.push(el);\r\n  //   }\r\n  // };\r\n  // const addLetterToRefs = (el: HTMLDivElement): void => {\r\n  //   if (el && !aboutHeadingRefs.current.includes(el)) {\r\n  //     aboutHeadingRefs.current.push(el);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <section className=\"about__wrapper\" ref={aboutRef} id=\"about\">\r\n      <div className=\"about__heading\">\r\n        <span>A</span>\r\n        <span>B</span>\r\n        <span>O</span>\r\n        <span>U</span>\r\n        <span>T</span>\r\n      </div>\r\n      <div className=\"about__paragraph\">\r\n        <div className=\"about__paragraph-line\">\r\n          <span>\r\n            Whatever name or phrase you choose to use, coding / programming /\r\n            software engineering / computer science, etc. I love it.\r\n          </span>\r\n        </div>\r\n        <div className=\"about__paragraph-line\">\r\n          <span>\r\n            I've always been interested in software development from a young\r\n            age, game developing taking up most of my interest at the time. As\r\n            the years grew, the more I started to get my hands dirty with coding\r\n            and turning my ideas into real tangle products.\r\n          </span>\r\n        </div>\r\n        <div className=\"about__paragraph-line\">\r\n          <span>\r\n            The more I code, the more I crave learning more and developing my\r\n            skills further. I aim to be the best that I can be and stand among\r\n            the top computer scientist in the world. To achieve these goals, I\r\n            work hard every day and I enjoy every moment of it.\r\n          </span>\r\n        </div>\r\n        <div className=\"about__paragraph-line\">\r\n          <span>\r\n            I am adaptive and work fast. Slowing others down and / or being\r\n            unreliable isn't who I am. I always aim to exceed expectations. By\r\n            improving my skills daily, I learn new ways that I can increase the\r\n            quality and quantity of the work I do and hold true to my words.\r\n          </span>\r\n        </div>\r\n        <div className=\"about__paragraph-line\">\r\n          <span>\r\n            I have strong JS fundamentals and have experience in React, Node,\r\n            MongoDB, SQL, etc. I am also currently learning C# and .NET 5 and\r\n            I’m always improving my skills in other areas so I that I’ll be able\r\n            to tackle any problem thrown my way.\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nconst Navbar = () => {\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n  const navListItems = useRef<HTMLLIElement[]>([]);\r\n  navListItems.current = [];\r\n\r\n  useEffect(() => {\r\n    if (navListItems.current) {\r\n      gsap.set(navListItems.current, {\r\n        y: \"100%\",\r\n        opacity: 1,\r\n      });\r\n      gsap.to(navListItems.current, {\r\n        y: 0,\r\n        duration: 1,\r\n        stagger: 0.1,\r\n        delay: 2.8,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const addItemToRefs = (el: HTMLLIElement): void => {\r\n    if (el && !navListItems.current.includes(el)) {\r\n      navListItems.current.push(el);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar__container\">\r\n        <ul className=\"navbar__list\">\r\n          <li className=\"navbar__list-item\" ref={addItemToRefs}>\r\n            <a href=\"#about\">\r\n              <span>About</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"navbar__list-item\" ref={addItemToRefs}>\r\n            <a href=\"#skills\">\r\n              <span>Skills</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"navbar__list-item\" ref={addItemToRefs}>\r\n            <a href=\"#projects\">\r\n              <span>Projects</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"navbar__list-item\" ref={addItemToRefs}>\r\n            <a href=\"#contact\">\r\n              <span>Contact</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\n\r\n// Components\r\nimport Navbar from \"../../../Navigation/Navbar\";\r\n\r\nconst Header = () => {\r\n  useEffect(() => {\r\n    let tl = gsap.timeline();\r\n    let headerFirstNameDivs: NodeListOf<Element> = document.querySelectorAll(\r\n      \".header__name-first-part\"\r\n    );\r\n    // let headerSecondNameDivs: NodeListOf<Element> = document.querySelectorAll(\r\n    //   \".header__name-second-part\"\r\n    // );\r\n    let headerSecondNameText: NodeListOf<Element> = document.querySelectorAll(\r\n      \".header__name-second-part span\"\r\n    );\r\n    let headerTitleText: NodeListOf<Element> = document.querySelectorAll(\r\n      \".header__title span\"\r\n    );\r\n    let htmlElement = document.querySelector(\"html\");\r\n    let headerRight = document.querySelector(\".header__right\");\r\n    let headerCTABtn: NodeListOf<Element> =\r\n      document.querySelectorAll(\".header__cta\");\r\n\r\n    let lastName = document.querySelector(\"#last-name\");\r\n\r\n    if (htmlElement) {\r\n      tl.set(htmlElement, { overflow: \"initial\" });\r\n    }\r\n\r\n    if (headerFirstNameDivs) {\r\n      tl.to(headerFirstNameDivs, {\r\n        clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\r\n        duration: 0.8,\r\n        delay: 1,\r\n      });\r\n    }\r\n\r\n    if (lastName) {\r\n      tl.to(lastName, {\r\n        marginLeft: 0,\r\n        delay: 0.5,\r\n        duration: 1.4,\r\n        ease: \"power4.inout\",\r\n      });\r\n    }\r\n\r\n    if (headerSecondNameText) {\r\n      gsap.set(headerSecondNameText, {\r\n        y: 200,\r\n        skewY: 20,\r\n        visibility: \"visible\",\r\n      });\r\n      tl.to(\r\n        headerSecondNameText,\r\n        {\r\n          duration: 1.8,\r\n          y: 0,\r\n          ease: \"power4.out\",\r\n          skewY: 0,\r\n        },\r\n        \"-=1\"\r\n      );\r\n    }\r\n    if (headerTitleText) {\r\n      gsap.set(headerTitleText, {\r\n        y: 200,\r\n        skewY: 20,\r\n        visibility: \"visible\",\r\n      });\r\n      tl.to(\r\n        headerTitleText,\r\n        {\r\n          duration: 1.8,\r\n          y: 0,\r\n          ease: \"power4.out\",\r\n          skewY: 0,\r\n        },\r\n        \"-=1.8\"\r\n      );\r\n    }\r\n    if (headerCTABtn) {\r\n      gsap.set(headerCTABtn, {\r\n        y: 200,\r\n        skewY: 20,\r\n        visibility: \"visible\",\r\n      });\r\n      tl.to(\r\n        headerCTABtn,\r\n        {\r\n          duration: 1.8,\r\n          y: 0,\r\n          ease: \"power4.out\",\r\n          skewY: 0,\r\n        },\r\n        \"-=1.8\"\r\n      );\r\n    }\r\n\r\n    if (headerRight) {\r\n      tl.to(\r\n        headerRight,\r\n        {\r\n          duration: 1,\r\n          scaleY: 1,\r\n          ease: \"power4.inout\",\r\n        },\r\n        \"-=1.4\"\r\n      );\r\n    }\r\n    if (htmlElement) {\r\n      tl.set(htmlElement, { overflow: \"initial\" });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"header__wrapper\">\r\n      <Navbar />\r\n      <div className=\"header__content\">\r\n        <div className=\"header__name\">\r\n          <div className=\"header__name-first\">\r\n            <div className=\"header__name-first-part\">A</div>\r\n            <div className=\"header__name-second-part\">\r\n              <span>drian</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"header__name-last\" id=\"last-name\">\r\n            <div className=\"header__name-first-part\">F</div>\r\n            <div className=\"header__name-second-part\">\r\n              <span>orde</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"header__title\">\r\n          <span>Full Stack Developer</span>\r\n        </div>\r\n        <div className=\"header__cta-container\">\r\n          <button className=\"header__cta\">\r\n            <a href=\"#projects\">Projects</a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__left\"></div>\r\n      <div className=\"header__right\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\n// Gsap\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nconst Contact = () => {\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n  const contactWrapperRef = useRef<HTMLElement>(null);\r\n  const contactHeadingRef = useRef<HTMLSpanElement>(null);\r\n  const contactSubHeadingRef = useRef<HTMLSpanElement>(null);\r\n  const submitFormBtnRef = useRef<HTMLButtonElement>(null);\r\n  // const formInputContainerRefs: any = useRef([]);\r\n  // formInputContainerRefs.current = [];\r\n\r\n  useEffect(() => {\r\n    if (contactWrapperRef.current) {\r\n      let tl = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: contactWrapperRef.current,\r\n          start: \"-5% top\",\r\n          end: \"bottom center\",\r\n          toggleActions: \"play reverse play reverse\",\r\n        },\r\n      });\r\n\r\n      if (contactHeadingRef.current) {\r\n        tl.from(contactHeadingRef.current, {\r\n          y: 200,\r\n          ease: \"power4.out\",\r\n          duration: 1,\r\n        });\r\n      }\r\n\r\n      if (contactSubHeadingRef.current) {\r\n        tl.from(\r\n          contactSubHeadingRef.current,\r\n          {\r\n            y: 200,\r\n            ease: \"power4.out\",\r\n            duration: 1,\r\n          },\r\n          \"-=0.9\"\r\n        );\r\n      }\r\n\r\n      tl.to(\r\n        \".contact__form-input-container\",\r\n        {\r\n          y: 0,\r\n          opacity: 1,\r\n          duration: 1,\r\n          stagger: 0.1,\r\n        },\r\n        \"-=0.9\"\r\n      );\r\n\r\n      if (submitFormBtnRef.current) {\r\n        tl.to(\r\n          submitFormBtnRef.current,\r\n          {\r\n            y: 0,\r\n            opacity: 1,\r\n            duration: 1,\r\n            stagger: 0.1,\r\n          },\r\n          \"-=1\"\r\n        );\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // const addContainerToRefs = (el: HTMLDivElement): void => {\r\n  //   if (el && !formInputContainerRefs.current.includes(el)) {\r\n  //     formInputContainerRefs.current.push(el);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <section className=\"contact__wrapper\" ref={contactWrapperRef} id=\"contact\">\r\n      <div className=\"contact__heading\">\r\n        <span ref={contactHeadingRef}>GET IN TOUCH</span>\r\n      </div>\r\n      <div className=\"contact__sub-heading\">\r\n        <span ref={contactSubHeadingRef}>Let's work together</span>\r\n      </div>\r\n      <form\r\n        action=\"https://formspree.io/xqkdklzv\"\r\n        method=\"POST\"\r\n        className=\"contact__form\"\r\n      >\r\n        <div className=\"contact__form-input-container\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" name=\"name\" placeholder=\"Name\" required={true} />\r\n        </div>\r\n        <div className=\"contact__form-input-container\">\r\n          <label htmlFor=\"_replyto\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"_replyto\"\r\n            placeholder=\"Email\"\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div className=\"contact__form-input-container\">\r\n          <label htmlFor=\"message\">Message</label>\r\n          <textarea\r\n            name=\"message\"\r\n            id=\"message\"\r\n            cols={30}\r\n            rows={10}\r\n            placeholder=\"Message\"\r\n            required={true}\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\" ref={submitFormBtnRef}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { FC } from \"react\";\r\n\r\ninterface SVGProps {\r\n  classes?: string;\r\n}\r\n\r\nconst LinkedInLogoSVG: FC<SVGProps> = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={props.classes}\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <g fill=\"currentColor\">\r\n        <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248c-.015-.709-.52-1.248-1.342-1.248c-.822 0-1.359.54-1.359 1.248c0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586c.173-.431.568-.878 1.232-.878c.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252c-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LinkedInLogoSVG;\r\n","import { FC } from \"react\";\r\n\r\ninterface SVGProps {\r\n  classes?: string;\r\n}\r\n\r\nconst GithubLogoSVG: FC<SVGProps> = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={props.classes}\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <g fill=\"none\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385c.6.105.825-.255.825-.57c0-.285-.015-1.23-.015-2.235c-3.015.555-3.795-.735-4.035-1.41c-.135-.345-.72-1.41-1.23-1.695c-.42-.225-1.02-.78-.015-.795c.945-.015 1.62.87 1.845 1.23c1.08 1.815 2.805 1.305 3.495.99c.105-.78.42-1.305.765-1.605c-2.67-.3-5.46-1.335-5.46-5.925c0-1.305.465-2.385 1.23-3.225c-.12-.3-.54-1.53.12-3.18c0 0 1.005-.315 3.3 1.23c.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23c.66 1.65.24 2.88.12 3.18c.765.84 1.23 1.905 1.23 3.225c0 4.605-2.805 5.625-5.475 5.925c.435.375.81 1.095.81 2.22c0 1.605-.015 2.895-.015 3.3c0 .315.225.69.825.57A12.02 12.02 0 0 0 24 12c0-6.63-5.37-12-12-12z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default GithubLogoSVG;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport LinkedInLogoSVG from \"../../../SVG/LinkedInLogoSVG\";\r\nimport GithubLogoSVG from \"../../../SVG/GithubLogoSVG\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <h4>Adrian Forde</h4>\r\n      <div className=\"footer__social\">\r\n        <a\r\n          href=\"https://www.linkedin.com/in/adrian-forde-969475197/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <LinkedInLogoSVG />\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/Adrian-Forde-1\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <GithubLogoSVG />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useRef } from \"react\";\r\n\r\n// Components\r\nimport Skills from \"./Skills/Skills\";\r\nimport Projects from \"./Projects/Projects\";\r\nimport About from \"./About/About\";\r\nimport Header from \"./Header/Header\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nconst Homepage = () => {\r\n  const homepageRef = useRef<HTMLDivElement>(null);\r\n  return (\r\n    <main className=\"wrapper wrapper--fd-col\" id=\"homepage\" ref={homepageRef}>\r\n      <Header />\r\n      <About />\r\n      <Skills homepageRef={homepageRef} />\r\n      <Projects />\r\n      <Contact />\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { FC } from \"react\";\n\n// React Router DOM\nimport { Switch, Route } from \"react-router-dom\";\n\n// Styles\nimport \"./styles/styles.css\";\n\n// Components\nimport Homepage from \"./components/Pages/Homepage/Homepage\";\n\nconst App: FC = () => {\n  return (\n    <div className=\"wrapper wrapper--fd-col wrapper--mh-100\" id=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}